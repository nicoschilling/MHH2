<?xml version="1.0" encoding="UTF-8"?>
<project name="MHH" default="all" basedir=".">

	<target name="build-depend">
		<!-- try to load a local properties file -->
		<property file="project.properties" />

		<fail message="Property module.version was not found. Have you copied project.properties.sample to project.properties and adjusted the parameters???" unless="module.version" />

		<ant antfile="${libs.ismllmatrices}/build.xml" target="deploy" dir="${libs.ismllmatrices}" >
			<property file="${libs.ismllmatrices}/project.properties"/>
		</ant>
	</target>

	<target name="init-constants">

		<!-- enable logging of the build output-->
		<record name="${basedir}/build.log" append="no" />


		<!-- try to load a local properties file -->
		<property file="project.properties" />

		<fail message="Property module.version was not found. Have you copied project.properties.sample to project.properties and adjusted the parameters???" unless="module.version" />

		<!-- do not change these properties here, do change project.properties file, instead -->

		<property name="build.path" value="build">
		</property>
		<property name="source.java" value="${basedir}/src/java" />
		<property name="tests.java" value="${basedir}/src/tests/java" />

		<patternset id="thirdparty.patternset">
			<include name="*.jar" />
		</patternset>

		<!-- The combined library classpath -->
		<path id="javac.classpath">

			<fileset dir="${libs.ismllmatrices}/output">
				<patternset refid="thirdparty.patternset" />
			</fileset>
			<fileset dir="${basedir}/lib">
				<patternset refid="thirdparty.patternset" />
			</fileset>
		</path>

		<property name="dep_cp" value="${toString:javac.classpath}" />
	</target>

	<!-- ================================================================== -->
	<!-- clean the whole output folder                                      -->
	<!-- ================================================================== -->
	<target name="clean" depends="init-constants">
		<record name="${basedir}/build.log" action="stop" />
		<delete file="${base-dir}/build.log" quiet="true" failonerror="false" />
		<delete dir="${build.path}/classes" />
		<delete dir="${basedir}/output" />
	</target>

	<!-- Compile all class files -->
	<target name="compile-classes" depends="build-depend, init-constants">
		<mkdir dir="${build.path}/classes" />
		<javac destdir="${build.path}/classes" 
				optimize="${maven.compile.optimize}" 
				debug="${maven.compile.debug}" 
				depend="${javac.depend}" 
				verbose="${maven.compile.verbose}" 
				deprecation="${maven.compile.deprecation}" 
				includeAntRuntime="${javac.include.ant.runtime}" 
				includeJavaRuntime="${javac.include.java.runtime}" 
				failonerror="true">
			<src path="${source.java}" />
			<classpath refid="javac.classpath" />
		</javac>
	</target>

	<target name="compile" depends="compile-classes" description="Compile all source files for the core module.">
		<copy todir="${build.path}/classes">
			<fileset dir="${source.java}">
				<exclude name="**/*.class" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="evere" depends="init-constants" description="Includes the evere - EVEning REsearch - components." if="evere.dir">
		<echo message="Including evere project sources..." />
		<echo message="Please note that the inclusion is a cherry-pick. You might want to customize it in this build file!" />
		<copy todir="${basedir}/output" flatten="true">
			<fileset dir="${evere.dir}/scripts/">
				<include name="sge/*.sh" />
				<include name="bashutils/*.sh" />
				<include name="lifecycle/*.sh" />
				<include name="targets/*.sh"/>
				<include name="traps/*.sh"/>

			</fileset>
		</copy>

<!--		<antcall target="evere-lifecycle">

		</antcall>-->
	</target>

	<target name="jar" depends="compile" description="Builds jar for core module.">
		<delete dir="${basedir}/output" />
		<mkdir dir="${basedir}/output" />
		<mkdir dir="${basedir}/output/logs" />
		<jar jarfile="${basedir}/output/${module.name}-${module.version}.jar">
			<fileset dir="${build.path}/classes" includes="**" />
		</jar>
	</target>

	<target name="all" depends="jar, evere" description="Builds the project.">
		<copy todir="${basedir}/output" >
			<fileset dir="${libs.ismllmatrices}/output" >
				<include name="**" />
			</fileset>
			<fileset dir="${basedir}/lib">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${basedir}/scripts"/>
		</copy>
		<chmod perm="0755">
			<fileset dir="${basedir}/output">
				<include name="**/*.sh" />
			</fileset>
		</chmod>
	</target>


</project>

